openapi: 3.0.0
info:
  title: Bookstore
  description: API documentation for managing books, users, and reviews
  version: 1.0.0
paths:
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDTO'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request

  /users/login:
    post:
      summary: User login and JWT token generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
      responses:
        '200':
          description: JWT token generated successfully
        '400':
          description: Bad request

  /users/me:
    get:
      summary: Get current user's data
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user's data retrieved successfully
        '401':
          description: Unauthorized

  /books:
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
      responses:
        '201':
          description: Book created successfully
        '400':
          description: Bad request

    get:
      summary: Get all books
      responses:
        '200':
          description: List of books retrieved successfully

  /books/{id}:
    get:
      summary: Get detailed information about a book
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detailed book information retrieved successfully
        '404':
          description: Book not found

    patch:
      summary: Update book information
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookDto'
      responses:
        '200':
          description: Book updated successfully
        '400':
          description: Bad request
        '404':
          description: Book not found

    delete:
      summary: Delete a book
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book deleted successfully
        '404':
          description: Book not found

  /books/{bookId}/reviews:
    post:
      summary: Add a new review for a book
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReviewDTO'
      responses:
        '201':
          description: Review added successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized

    get:
      summary: Get reviews for a specific book
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reviews retrieved successfully
        '404':
          description: Book not found

  /reviews/{id}:
    patch:
      summary: Update a review
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewDTO'
      responses:
        '200':
          description: Review updated successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Review not found

    delete:
      summary: Delete a review
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Review deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Review not found

components:
  schemas:
    RegisterDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
      required:
        - username
        - password
        - email

    LoginDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    BookDTO:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        author:
          type: string
        avgRating:
          type: number
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/ReviewDTO'
      required:
        - title
        - description
        - author

    UpdateBookDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        author:
          type: string

    PostReviewDTO:
      type: object
      properties:
        id:
          type: string
        review:
          type: string
        rating:
          type: number
      required:
        - id
        - review
        - rating

    ReviewDTO:
      type: object
      properties:
        id:
          type: string
        review:
          type: string
        rating:
          type: number
      required:
        - id
        - review
        - rating
